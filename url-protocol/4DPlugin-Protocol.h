/* --------------------------------------------------------------------------------
 #
 #	4DPlugin-Protocol.h
 #	source generated by 4D Plugin Wizard
 #	Project : Protocol
 #	author : miyako
 #	2022/04/20
 #  
 # --------------------------------------------------------------------------------*/

#ifndef PLUGIN_PROTOCOL_H
#define PLUGIN_PROTOCOL_H

#include "4DPluginAPI.h"

#if VERSIONWIN
#include <windows.h>
#pragma comment(lib, "advapi32.lib")
#pragma comment(lib, "user32.lib")
#pragma comment(lib, "comctl32.lib")
#pragma comment(lib, "rpcrt4.lib")
#pragma comment(lib, "shlwapi.lib")
#include <commctrl.h>
#include <shlwapi.h>
#include <future>
#endif

#if VERSIONMAC
#import <CoreServices/CoreServices.h>
#import <Foundation/Foundation.h>
#endif

#include <mutex>
#include <vector>
#include <iostream>

static void listenerInit(void);
static void listenerLoop(void);
static void listenerLoopStart(void);
static void listenerLoopFinish(void);
static void listenerLoopExecute(void);
static void listenerLoopExecuteMethod(void);

typedef PA_long32 process_number_t;
typedef PA_long32 process_stack_size_t;
typedef PA_long32 method_id_t;
typedef PA_Unichar* process_name_t;

#pragma mark -

void REGISTER_PROTOCOL(PA_PluginParameters params);

#endif /* PLUGIN_PROTOCOL_H */
